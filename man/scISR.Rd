% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scISR.R
\name{scISR}
\alias{scISR}
\title{scISR: Single-cell Imputation using Subspace Regression}
\usage{
scISR(data, ncores = 1, seed = 1)
}
\arguments{
\item{data}{Input matrix or data frame. Rows represent genes while columns represent samples}

\item{ncores}{Seed for reproducibility. Default value is \code{1}.}
}
\value{
\code{scISR} returns an imputed single-cell expression matrix where rows represent genes while columns represent samples.
}
\description{
Perform single-cell Imputation using Subspace Regression
}
\details{
scISR performs imputation for single-cell sequencing data. scISR identifies the true dropout values in the scRNA-seq dataset using
hyper-geomtric testing approach. Based on the result obtained from hyper-geometric testing, the original dataset is segregated into two
subsets including training data and imputable data. Next, training data is used for constructing a generalize linear regression model that
is used for imputation on the imputable data.
}
\examples{

# Load the package
library(scISR)
# Load Goolam dataset
data('Goolam'); raw <- Goolam$data; label <- Goolam$label
# Log transform the raw data if necessary
if(max(data) > 100) raw <- log2(raw + 1)

# Perform the imputation
imputed <- scISR(data = raw)

# Perform PCA and k-means clustering on raw data
set.seed(1)
# Filter genes that have only zeros from raw data
raw_filer <- raw[rowSums(raw != 0) > 0, ]
pca_raw <- irlba::irlba(t(raw_filer), nv = 20)$u
cluster_raw <- kmeans(pca_raw, length(unique(label)), nstart = 2000, iter.max = 2000)$cluster
print(paste('ARI of clusters using raw data:', round(adjustedRandIndex(cluster_raw, label),3)))

# Perform PCA and k-means clustering on imputed data
set.seed(1)
pca_imputed <- irlba::irlba(t(imputed), nv = 20)$u
cluster_imputed <- kmeans(pca_imputed, length(unique(label)), nstart = 2000, iter.max = 2000)$cluster
print(paste('ARI of clusters using imputed data:', adjustedRandIndex(cluster_imputed, label)))

}
